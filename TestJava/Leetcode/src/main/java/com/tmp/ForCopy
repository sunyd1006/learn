class Solution {
   // https://leetcode-cn.com/problems/subarray-sum-equals-k/solution/bao-li-jie-fa-qian-zhui-he-qian-zhui-he-you-hua-ja/
	public int subarraySum(int[] nums, int k) {
		Map<Integer, Integer> map = new HashMap<>();
		map.put(0, 1);

		int count = 0, prefixSum = 0;
		for (int i = 0; i < nums.length; i++) {
			prefixSum += nums[i];
			if (map.containsKey(prefixSum - k)) {
				count += map.get(prefixSum - k);
			}
			/**
			 * case [1, -1, 0] 0  ， count(1,-1,0  |  0) = 2
			 */
			Integer num = map.getOrDefault(prefixSum, 0);   // ee: sum(nums[i:j]) = 0, 故而是默认值+1
			map.put(prefixSum, num + 1);
		}
		return count;
	}
}